{
  "form.pipelineDefault": "管道默认值",
  "form.removeAction": "移除",
  "form.addAction": "添加",
  "form.refreshAction": "刷新",
  "form.browseAction": "浏览",
  "form.requiredError": "是必需属性",
  "form.noProperty": "未定义属性",
  "Additional Properties": "其他属性",
  "Additional properties used by Elyra that are not given in the component definition.": "Elyra 使用的未在组件定义中给出的其他属性。",
  "CPU": "CPU",
  "For CPU-intensive workloads, you can choose more than 1 CPU (e.g. 1.5).": "对于 CPU 密集型工作负载，您可以选择 1 个以上的 CPU（例如 1.5）。",
  "Label": "Label",
  "A custom label for the node.": "节点的自定义标签。",
  "File Dependencies": "文件依赖关系",
  "Local file dependencies that need to be copied to remote execution environment.": "需要复制到远程执行环境的本地文件依赖项。",
  "Distributed Training": "分布式训练",
  "Number of workers to run distributed training. Supported framework Tensorflow(Pytorch comming soon). Use env RANK, NRANKS in your program if needed.": "运行分布式培训的工作人员数。支持的框架Tensorflow（Pytorch即将推出）。如果需要，请在程序中使用 env RANK、NRANK。",
  "Environment Variables": "环境变量",
  "Environment variables to be set on the execution environment.": "要在执行环境中设置的环境变量。",
  "Filename": "文件名",
  "The path to the Python Script.": "Python 脚本的路径。",
  "GPU": "GPU",
  "For GPU-intensive workloads, you can choose more than 1 GPU. Must be an integer.": "对于 GPU 密集型工作负载，您可以选择 1 个以上的 GPU。必须是整数。",
  "GPU Mem": "GPU 内存",
  "Resource amount of GPU Memory. Must be an integer.": "GPU 内存的资源量。必须是整数。",
  "GPU Mem Vendor": "GPU 内存供应商",
  "When using vGPU resource types like tencent.com/vcuda-core, set corresponding GPU memory limits like tencent.com/vcuda-memory.": "使用 vGPU 资源类型（如 tencent.com/vcuda-core）时，请设置相应的 GPU 内存限制（如 tencent.com/vcuda-memory）。",
  "GPU Vendor": "GPU 供应商",
  "GPU Vendor, or K8s GPU resource type, default nvidia.com/gpu.": "GPU 供应商或 K8s GPU 资源类型默认 nvidia.com/gpu。",
  "Include Subdirectories": "包括子目录",
  "Recursively include subdirectories when submitting a pipeline (This may increase submission time).": "提交管道时递归包含子目录（这可能会增加提交时间）。",
  "Inputs": "输入",
  "Input properties for this component.": "此组件的输入属性。",
  "Kubernetes Pod Annotations": "Kubernetes Pod Annotations",
  "Metadata to be added to this node. The metadata is exposed as annotation in the Kubernetes pod that executes this node.": "要添加到此节点的元数据。元数据在执行此节点的 Kubernetes Pod 中作为注释公开。",
  "Kubernetes Pod Labels": "Kubernetes Pod Labels",
  "Metadata to be added to this node. The metadata is exposed as label in the Kubernetes pod that executes this node.": "要添加到此节点的元数据。元数据在执行此节点的 Kubernetes Pod 中作为标签公开。",
  "Kubernetes Secrets": "Kubernetes Secrets",
  "Kubernetes secrets to make available as environment variables to this node. The secret name and key given must be present in the Kubernetes namespace where the node is executed or this node will not run.": "Kubernetes 机密可用作此节点的环境变量。给定的密钥名称和密钥必须存在于执行节点的 Kubernetes 命名空间中，否则此节点将无法运行。",
  "Shared Memory Size": "共享内存大小",
  "Configure a custom shared memory size in gigabytes (10^9 bytes) for the pod that executes a node. A custom value is assigned if the size property value is a number greater than zero.": "为执行节点的 Pod 配置自定义共享内存大小（以千兆字节（10^9 字节）为单位）。如果大小属性值是大于零的数字，则分配自定义值。",
  "Kubernetes Tolerations": "Kubernetes Tolerations",
  "Kubernetes tolerations to apply to the pod where the node is executed.": "适用于执行节点的 Pod 的 Kubernetes 容忍度。",
  "RAM(GB)": "RAM(GB)",
  "The total amount of RAM specified.": "指定的 RAM 总量。",
  "Data Volumes": "数据卷",
  "Volumes to be mounted in this node. The specified Persistent Volume Claims must exist in the Kubernetes namespace where the node is executed or this node will not run.": "要在此节点中装入的卷。指定的持久卷声明必须存在于执行节点的 Kubernetes 命名空间中，否则此节点将不会运行。",
  "Output Files": "输出文件",
  "Files generated during execution that will become available to all subsequent pipeline steps.": "在执行期间生成的文件，这些文件将可用于所有后续管道步骤。",
  "Outputs": "输出",
  "Outputs produced by this component.": "此组件生成的输出。",
  "Runtime Image": "运行时镜像",
  "Container image used as execution environment.": "用作执行环境的容器镜像。",
  "Environment Variable": "环境变量",
  "Value": "Value",
  "Key": "Key",
  "Mount volume read-only": "只读挂载卷",
  "Sub Path": "子路径",
  "Persistent Volume Claim Name": "持久卷声明名称",
  "Mount Path": "挂载路径",
  "Effect": "影响",
  "Operator": "Operator",
  "Memory Size (GB)": "内存大小（GB）",
  "Secret Key": "密钥",
  "Secret Name": "密钥名称",
  "Pipeline Name": "管道名称",
  "Pipeline Runtime": "管道运行时",
  "Pipeline Description": "管道描述",
  "Object Storage path prefix": "对象存储路径前缀",
  "For generic components, this path prefix is used when storing artifacts on Object Storage.": "对于通用组件，在对象存储上存储工件时会使用此路径前缀。",
  "Node Defaults": "节点默认值",
  "Default values are applied to all nodes in this pipeline and can be customized in each node.": "默认值应用于此管道中的所有节点，并且可以在每个节点中自定义。",
  "Generic Node Defaults": "通用节点默认值",
  "Default values are applied to all generic nodes in this pipeline and can be customized in each node.": "默认值应用于此管道中的所有通用节点，并且可以在每个节点中自定义。",
  "Custom Node Defaults": "自定义节点默认值",
  "Default values are applied to all custom nodes in this pipeline and can be customized in each node.": "默认值应用于此管道中的所有自定义节点，并且可以在每个节点中自定义。",
  "Disable node caching": "禁用节点缓存",
  "Disable caching to force node re-execution in the target runtime environment.": "禁用缓存以强制在目标运行时环境中重新执行节点。"
}
